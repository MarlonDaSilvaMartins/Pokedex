/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.PokemonVO;
import servicos.PokemonServicos;
import servicos.ServicosFactory;

/**
 *
 * @author Marlon Martins
 * @since 06/05/2018 - 05:25
 * @version 1.0 red
 */
public class GUIManPokemon extends javax.swing.JInternalFrame {

    DefaultTableModel dtm = new DefaultTableModel(
            new Object[][]{},
            new Object[]{"Código","Nome","Tipo","Categoria","Peso","Altura","Habilidade"}
    );
    
    
    /**
     * Creates new form GUIManPokemon
     */
    public GUIManPokemon() {
        initComponents();
        preencherTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlpTabela = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePokemon = new javax.swing.JTable();
        jlpAcoes = new javax.swing.JLayeredPane();
        jlpAtualizar = new javax.swing.JButton();
        jlpLimpar = new javax.swing.JButton();
        jbConfirmaralteracao = new javax.swing.JButton();
        jbDeleta = new javax.swing.JButton();
        jlpFiltrar = new javax.swing.JLayeredPane();
        jtFiltrar = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jlpAlterar = new javax.swing.JLayeredPane();
        jlCodigo = new javax.swing.JLabel();
        jlNome = new javax.swing.JLabel();
        jlTipo = new javax.swing.JLabel();
        jtCodigo = new javax.swing.JTextField();
        jtNome = new javax.swing.JTextField();
        jtTipo = new javax.swing.JTextField();
        jlCategoria = new javax.swing.JLabel();
        jlPeso = new javax.swing.JLabel();
        jlAltura = new javax.swing.JLabel();
        jlHabilidade = new javax.swing.JLabel();
        jtCategoria = new javax.swing.JTextField();
        jtPeso = new javax.swing.JTextField();
        jtAltura = new javax.swing.JTextField();
        jtHabilidade = new javax.swing.JTextField();
        jtAlterar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Pokemon");

        jlpTabela.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTablePokemon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Tipo", "Categoria", "Peso", "Altura", "Habilidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePokemon.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTablePokemon);
        if (jTablePokemon.getColumnModel().getColumnCount() > 0) {
            jTablePokemon.getColumnModel().getColumn(0).setResizable(false);
            jTablePokemon.getColumnModel().getColumn(1).setResizable(false);
            jTablePokemon.getColumnModel().getColumn(2).setResizable(false);
            jTablePokemon.getColumnModel().getColumn(3).setResizable(false);
            jTablePokemon.getColumnModel().getColumn(4).setResizable(false);
            jTablePokemon.getColumnModel().getColumn(5).setResizable(false);
            jTablePokemon.getColumnModel().getColumn(6).setResizable(false);
        }

        jlpTabela.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlpTabelaLayout = new javax.swing.GroupLayout(jlpTabela);
        jlpTabela.setLayout(jlpTabelaLayout);
        jlpTabelaLayout.setHorizontalGroup(
            jlpTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpTabelaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 693, Short.MAX_VALUE)
                .addContainerGap())
        );
        jlpTabelaLayout.setVerticalGroup(
            jlpTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpTabelaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jlpAcoes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jlpAtualizar.setText("Atualizar");
        jlpAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlpAtualizarActionPerformed(evt);
            }
        });
        jlpAtualizar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jlpAtualizarKeyPressed(evt);
            }
        });

        jlpLimpar.setText("Limpar");
        jlpLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlpLimparActionPerformed(evt);
            }
        });
        jlpLimpar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jlpLimparKeyPressed(evt);
            }
        });

        jbConfirmaralteracao.setText("Confirmar alteração");
        jbConfirmaralteracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConfirmaralteracaoActionPerformed(evt);
            }
        });
        jbConfirmaralteracao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbConfirmaralteracaoKeyPressed(evt);
            }
        });

        jbDeleta.setText("Deleta");
        jbDeleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDeletaActionPerformed(evt);
            }
        });
        jbDeleta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbDeletaKeyPressed(evt);
            }
        });

        jlpAcoes.setLayer(jlpAtualizar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpAcoes.setLayer(jlpLimpar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpAcoes.setLayer(jbConfirmaralteracao, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpAcoes.setLayer(jbDeleta, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlpAcoesLayout = new javax.swing.GroupLayout(jlpAcoes);
        jlpAcoes.setLayout(jlpAcoesLayout);
        jlpAcoesLayout.setHorizontalGroup(
            jlpAcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpAcoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlpAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jlpLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(jbConfirmaralteracao, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbDeleta, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jlpAcoesLayout.setVerticalGroup(
            jlpAcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpAcoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jlpAcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlpAtualizar)
                    .addComponent(jlpLimpar)
                    .addComponent(jbConfirmaralteracao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbDeleta))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jlpFiltrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtFiltrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtFiltrarKeyReleased(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome", "Código", "Tipo", "Categoria" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jlpFiltrar.setLayer(jtFiltrar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpFiltrar.setLayer(jComboBox1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlpFiltrarLayout = new javax.swing.GroupLayout(jlpFiltrar);
        jlpFiltrar.setLayout(jlpFiltrarLayout);
        jlpFiltrarLayout.setHorizontalGroup(
            jlpFiltrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpFiltrarLayout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(jtFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96))
        );
        jlpFiltrarLayout.setVerticalGroup(
            jlpFiltrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpFiltrarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jlpFiltrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jlpAlterar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jlCodigo.setText("Código");

        jlNome.setText("Nome");

        jlTipo.setText("Tipo");

        jtCodigo.setEditable(false);

        jtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtNomeKeyPressed(evt);
            }
        });

        jtTipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtTipoKeyPressed(evt);
            }
        });

        jlCategoria.setText("Categoria");

        jlPeso.setText("peso");

        jlAltura.setText("Altura");

        jlHabilidade.setText("Habilidade");

        jtCategoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtCategoriaKeyPressed(evt);
            }
        });

        jtPeso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtPesoKeyPressed(evt);
            }
        });

        jtAltura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtAlturaKeyPressed(evt);
            }
        });

        jtHabilidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtHabilidadeKeyPressed(evt);
            }
        });

        jtAlterar.setText("Alterar");
        jtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtAlterarActionPerformed(evt);
            }
        });

        jlpAlterar.setLayer(jlCodigo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpAlterar.setLayer(jlNome, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpAlterar.setLayer(jlTipo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpAlterar.setLayer(jtCodigo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpAlterar.setLayer(jtNome, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpAlterar.setLayer(jtTipo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpAlterar.setLayer(jlCategoria, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpAlterar.setLayer(jlPeso, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpAlterar.setLayer(jlAltura, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpAlterar.setLayer(jlHabilidade, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpAlterar.setLayer(jtCategoria, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpAlterar.setLayer(jtPeso, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpAlterar.setLayer(jtAltura, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpAlterar.setLayer(jtHabilidade, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jlpAlterar.setLayer(jtAlterar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jlpAlterarLayout = new javax.swing.GroupLayout(jlpAlterar);
        jlpAlterar.setLayout(jlpAlterarLayout);
        jlpAlterarLayout.setHorizontalGroup(
            jlpAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpAlterarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jlpAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jlpAlterarLayout.createSequentialGroup()
                        .addComponent(jlCategoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))
                    .addGroup(jlpAlterarLayout.createSequentialGroup()
                        .addComponent(jlCodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtCodigo))
                    .addGroup(jlpAlterarLayout.createSequentialGroup()
                        .addGroup(jlpAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlNome)
                            .addComponent(jlTipo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jlpAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtTipo, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                            .addComponent(jtNome))))
                .addGap(118, 118, 118)
                .addGroup(jlpAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jlpAlterarLayout.createSequentialGroup()
                        .addComponent(jlHabilidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtHabilidade, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jlpAlterarLayout.createSequentialGroup()
                        .addComponent(jlPeso)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtPeso))
                    .addGroup(jlpAlterarLayout.createSequentialGroup()
                        .addComponent(jlAltura)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtAltura, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(175, Short.MAX_VALUE))
        );
        jlpAlterarLayout.setVerticalGroup(
            jlpAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jlpAlterarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jlpAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCodigo)
                    .addComponent(jtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlPeso)
                    .addComponent(jtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jlpAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlNome)
                    .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlAltura)
                    .addComponent(jtAltura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jlpAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlTipo)
                    .addComponent(jtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlHabilidade)
                    .addComponent(jtHabilidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jlpAlterarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCategoria)
                    .addComponent(jtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtAlterar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlpAlterar)
                    .addComponent(jlpTabela, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlpAcoes, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlpFiltrar, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlpFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlpTabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlpAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlpAcoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void preencherTabela(){
        try {
            ArrayList<PokemonVO> pokemon = new ArrayList<>();
            PokemonServicos ps = ServicosFactory.getPokemonServicos();
            pokemon = ps.buscarPokemon();
            
            limparTabela();
            
            for(int i = 0 ; i < pokemon.size() ; i++){
                dtm.addRow(new String[]{
                    String.valueOf(pokemon.get(i).getIdpokemon()),
                    pokemon.get(i).getNome(),
                    pokemon.get(i).getTipo(),
                    pokemon.get(i).getCategoria(),
                    String.valueOf(pokemon.get(i).getPeso()),
                    String.valueOf(pokemon.get(i).getAltura()),
                    pokemon.get(i).getHabilidade()
                });
            }//fecha for
            jTablePokemon.setModel(dtm);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                    this,
                    "Erro ao preencher tabela "+e.getMessage());
        }//fecha catch
    }//fecha preencher tabela
    
    private void limparTabela(){
        dtm.setNumRows(0);
    }//fecha limpar tabela
    
    private void confimarAlteracao(){
        try {
            PokemonVO pVO = new PokemonVO();
            
            pVO.setIdpokemon(Integer.parseInt(jtCodigo.getText()));
            pVO.setNome(jtNome.getText());
            pVO.setTipo(jtTipo.getText());
            pVO.setCategoria(jtCategoria.getText());
            pVO.setPeso(Float.parseFloat(jtCategoria.getText()));
            pVO.setAltura(Float.parseFloat(jtAltura.getText()));
            pVO.setHabilidade(jtHabilidade.getText());
            
            PokemonServicos ps = ServicosFactory.getPokemonServicos();
            
            ps.alterarPokemon(pVO);
            
            JOptionPane.showMessageDialog(
                    this, 
                    "Pokemon alterado com sucesso");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Erro ao alterar "+e.getMessage());
        }//fecha catch
    }//fecha confirmaralteracao
    
    private void alterar(){
        int linha = jTablePokemon.getSelectedRow();
        if(linha != -1){
            jtCodigo.setText((String)jTablePokemon.getValueAt(linha, 0));
            jtNome.setText((String)jTablePokemon.getValueAt(linha, 1));
            jtTipo.setText((String)jTablePokemon.getValueAt(linha, 2));
            jtCategoria.setText((String)jTablePokemon.getValueAt(linha, 3));
            jtPeso.setText((String)jTablePokemon.getValueAt(linha, 4));
            jtAltura.setText((String)jTablePokemon.getValueAt(linha, 5));
            jtHabilidade.setText((String)jTablePokemon.getValueAt(linha, 6));
        }else{
            JOptionPane.showMessageDialog(
                    this,
                    "Selecione alguma linha");
        }//fecha else
    }//fecha alterar
    
    private void limpar(){
        jtCodigo.setText(null);
        jtNome.setText(null);
        jtTipo.setText(null);
        jtCategoria.setText(null);
        jtPeso.setText(null);
        jtAltura.setText(null);
        jtHabilidade.setText(null);
    }//fecha limpar
    
    private void deletar(){
        try {
            int linha = jTablePokemon.getSelectedRow();
            if(linha == -1){
                JOptionPane.showMessageDialog(
                        this,
                        "Selecione uma linha para deletar!");
            }else{
                String id = jTablePokemon.getValueAt(linha, 0).toString();
                PokemonServicos ps = ServicosFactory.getPokemonServicos();
                ps.deletarPokemon(Integer.parseInt(id));
                JOptionPane.showMessageDialog(
                        this,
                        "Ginasio deletado com sucesso");
            }//fecha else
        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                    this,
                    "Erro "+e.getMessage());
        }//fecha catch
    }//fecha deletar
    
    private void filtrar(){
        try {
            if(jtFiltrar.getText().isEmpty()){
                preencherTabela();
            }else{
                String pesq = jtFiltrar.getText();
                String filtro = jComboBox1.getSelectedItem().toString();
                String query = "";
                if(filtro.equalsIgnoreCase("Nome")){
                    query="where nome like '%"+pesq+"%'";
                }else if(filtro.equalsIgnoreCase("Código")){
                    query="where idpokemon like '%"+pesq+"%'";
                }else if(filtro.equalsIgnoreCase("Tipo")){
                    query="where tipo like '%"+pesq+"%'";
                }else if(filtro.equalsIgnoreCase("Categoria")){
                    query="where categoria like '%"+pesq+"%'";
                }//fecha if                
                PokemonServicos ps = ServicosFactory.getPokemonServicos();
                ArrayList<PokemonVO> pokemon = ps.filtrar(query);
                for(int i=0;i<pokemon.size();i++){
                    dtm.addRow(new String[]{
                        String.valueOf(pokemon.get(i).getIdpokemon()),
                        pokemon.get(i).getNome(),
                        pokemon.get(i).getTipo(),
                        pokemon.get(i).getCategoria(),
                        String.valueOf(pokemon.get(i).getPeso()),
                        String.valueOf(pokemon.get(i).getAltura()),
                        pokemon.get(i).getHabilidade()
                    });                    
                }//fecha for
            }//fecha else
        } catch (Exception e) {
            jtFiltrar.setText(null);
            JOptionPane.showMessageDialog(
                    this,
                    "Erro! "+e.getMessage());
        }//fecha catch
    }//fecha filtrar
    
    private void jlpAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlpAtualizarActionPerformed
        preencherTabela();
    }//GEN-LAST:event_jlpAtualizarActionPerformed

    private void jlpLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlpLimparActionPerformed
        limparTabela();
    }//GEN-LAST:event_jlpLimparActionPerformed

    private void jbConfirmaralteracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConfirmaralteracaoActionPerformed
        confimarAlteracao();
        limparTabela();
        preencherTabela();
        limpar();
    }//GEN-LAST:event_jbConfirmaralteracaoActionPerformed

    private void jtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtAlterarActionPerformed
        alterar();
    }//GEN-LAST:event_jtAlterarActionPerformed

    private void jbDeletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDeletaActionPerformed
        deletar();
        limparTabela();
        preencherTabela();
    }//GEN-LAST:event_jbDeletaActionPerformed

    private void jtFiltrarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtFiltrarKeyReleased
        limparTabela();
        filtrar();
    }//GEN-LAST:event_jtFiltrarKeyReleased

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        limparTabela();
        filtrar();
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNomeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtTipo.grabFocus();
        }//fecha if
    }//GEN-LAST:event_jtNomeKeyPressed

    private void jtTipoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtTipoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtCategoria.grabFocus();
        }//fecha if
    }//GEN-LAST:event_jtTipoKeyPressed

    private void jtCategoriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtCategoriaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtPeso.grabFocus();
        }//fecha if
    }//GEN-LAST:event_jtCategoriaKeyPressed

    private void jtPesoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtPesoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtAltura.grabFocus();
        }//fecha if
    }//GEN-LAST:event_jtPesoKeyPressed

    private void jtAlturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtAlturaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtHabilidade.grabFocus();
        }//fecha if
    }//GEN-LAST:event_jtAlturaKeyPressed

    private void jtHabilidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtHabilidadeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jbConfirmaralteracao.grabFocus();
        }//fecha if
    }//GEN-LAST:event_jtHabilidadeKeyPressed

    private void jbConfirmaralteracaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbConfirmaralteracaoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            confimarAlteracao();
            limparTabela();
            preencherTabela();
            limpar();
        }//fecha if
    }//GEN-LAST:event_jbConfirmaralteracaoKeyPressed

    private void jlpAtualizarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jlpAtualizarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            preencherTabela();
        }//fecha if
    }//GEN-LAST:event_jlpAtualizarKeyPressed

    private void jlpLimparKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jlpLimparKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            limparTabela();
        }//fecha if
    }//GEN-LAST:event_jlpLimparKeyPressed

    private void jbDeletaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbDeletaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            deletar();
        }//fecha if
    }//GEN-LAST:event_jbDeletaKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePokemon;
    private javax.swing.JButton jbConfirmaralteracao;
    private javax.swing.JButton jbDeleta;
    private javax.swing.JLabel jlAltura;
    private javax.swing.JLabel jlCategoria;
    private javax.swing.JLabel jlCodigo;
    private javax.swing.JLabel jlHabilidade;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlPeso;
    private javax.swing.JLabel jlTipo;
    private javax.swing.JLayeredPane jlpAcoes;
    private javax.swing.JLayeredPane jlpAlterar;
    private javax.swing.JButton jlpAtualizar;
    private javax.swing.JLayeredPane jlpFiltrar;
    private javax.swing.JButton jlpLimpar;
    private javax.swing.JLayeredPane jlpTabela;
    private javax.swing.JButton jtAlterar;
    private javax.swing.JTextField jtAltura;
    private javax.swing.JTextField jtCategoria;
    private javax.swing.JTextField jtCodigo;
    private javax.swing.JTextField jtFiltrar;
    private javax.swing.JTextField jtHabilidade;
    private javax.swing.JTextField jtNome;
    private javax.swing.JTextField jtPeso;
    private javax.swing.JTextField jtTipo;
    // End of variables declaration//GEN-END:variables
}
